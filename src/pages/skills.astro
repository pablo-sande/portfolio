---
import SkillCard from '../components/SkillCard.astro'
import Layout from '../layouts/Layout.astro'
import client from '../lib/apollo-client'
import graph from 'graphql-tag'
import type { SkillCardItem } from '../data/types'

const { data, loading } = await client.query({
    query: graph`
        query SkillLevels {
            skills {
                title,
                thumbnail,
                skillLevel
            }
        }
    `,
})

const skillCardItems: Array<SkillCardItem> = data.skills
---

<Layout title="skills">
    <div class="max-w-screen-lg m-auto p-4 sm:p-6 relative">
        <h1 class="enter-animation-title text-4xl font-bold text-gray-300">
            <span class="lg:inline hidden">Hover</span>
            <span class="lg:hidden block inline">Click</span>
             the skills to check my expertise
        </h1>

        {loading && <p>Loading...</p>}

        {
            !loading && (
                <div class="overflow-hidden grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-5 gap-2 sm:gap-10 mt-4 sm:mt-8">
                    {skillCardItems.map((item) => (
                        <div class="enter-animation">
                            <SkillCard item={item} />
                        </div>
                    ))}
                </div>
            )
        }
    </div>
</Layout>

<style lang="scss">
    .enter-animation:nth-child(odd) {
        animation: fromleft 1.5s ease 0s;
        // transition-timing-function: cubic-bezier(0,1,1,1);
    }
    .enter-animation:nth-child(even) {
        animation: fromright 2.75s ease-out 0s;
        // transition-timing-function: cubic-bezier(0,1,1,1);
    }

    @keyframes fromleft {
        0% {
            opacity: 0;
            transform: translate(-100%, 0);
        }
        100% {
            opacity: 1;
            left: 0;
            transform: translate(0, 0);
        }
    }
    @keyframes fromright {
        0% {
            opacity: 0;
            transform: translate(100%, 0);
        }
        100% {
            opacity: 1;
            transform: translate(0, 0);
        }
    }

    .enter-animation-title {
        animation: entertitle 2.75s ease 0s;
    }

    @keyframes entertitle {
        0% {
            opacity: 0;
            transform: translate(0, -100%);
        }
        100% {
            opacity: 1;
            transform: translate(0, 0);
        }
    }
</style>
